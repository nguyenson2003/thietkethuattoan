#BlueJ class context
comment0.target=BipartiteX
comment0.text=\r\n\ \ The\ {@code\ BipartiteX}\ class\ represents\ a\ data\ type\ for\ \r\n\ \ determining\ whether\ an\ undirected\ graph\ is\ bipartite\ or\ whether\r\n\ \ it\ has\ an\ odd-length\ cycle.\r\n\ \ The\ <em>isBipartite</em>\ operation\ determines\ whether\ the\ graph\ is\r\n\ \ bipartite.\ If\ so,\ the\ <em>color</em>\ operation\ determines\ a\r\n\ \ bipartition;\ if\ not,\ the\ <em>oddCycle</em>\ operation\ determines\ a\r\n\ \ cycle\ with\ an\ odd\ number\ of\ edges.\r\n\ \ <p>\r\n\ \ This\ implementation\ uses\ breadth-first\ search\ and\ is\ nonrecursive.\r\n\ \ The\ constructor\ takes\ time\ proportional\ to\ <em>V</em>\ +\ <em>E</em>\r\n\ \ (in\ the\ worst\ case),\r\n\ \ where\ <em>V</em>\ is\ the\ number\ of\ vertices\ and\ <em>E</em>\ is\ the\ number\ of\ edges.\r\n\ \ Afterwards,\ the\ <em>isBipartite</em>\ and\ <em>color</em>\ operations\r\n\ \ take\ constant\ time;\ the\ <em>oddCycle</em>\ operation\ takes\ time\ proportional\r\n\ \ to\ the\ length\ of\ the\ cycle.\r\n\ \ See\ {@link\ Bipartite}\ for\ a\ recursive\ version\ that\ uses\ depth-first\ search.\r\n\ \ <p>\r\n\ \ For\ additional\ documentation,\r\n\ \ see\ <a\ href\="https\://algs4.cs.princeton.edu/41graph">Section\ 4.1</a>\ \ \ \r\n\ \ of\ <i>Algorithms,\ 4th\ Edition</i>\ by\ Robert\ Sedgewick\ and\ Kevin\ Wayne.\r\n\r\n\ \ @author\ Robert\ Sedgewick\r\n\ \ @author\ Kevin\ Wayne\r\n
comment1.params=G
comment1.target=BipartiteX(Graph)
comment1.text=\r\n\ Determines\ whether\ an\ undirected\ graph\ is\ bipartite\ and\ finds\ either\ a\r\n\ bipartition\ or\ an\ odd-length\ cycle.\r\n\r\n\ @param\ \ G\ the\ graph\r\n
comment2.params=G\ s
comment2.target=void\ bfs(Graph,\ int)
comment3.params=
comment3.target=boolean\ isBipartite()
comment3.text=\r\n\ Returns\ true\ if\ the\ graph\ is\ bipartite.\r\n\r\n\ @return\ {@code\ true}\ if\ the\ graph\ is\ bipartite;\ {@code\ false}\ otherwise\r\n
comment4.params=v
comment4.target=boolean\ color(int)
comment4.text=\r\n\ Returns\ the\ side\ of\ the\ bipartite\ that\ vertex\ {@code\ v}\ is\ on.\r\n\r\n\ @param\ \ v\ the\ vertex\r\n\ @return\ the\ side\ of\ the\ bipartition\ that\ vertex\ {@code\ v}\ is\ on;\ two\ vertices\r\n\ \ \ \ \ \ \ \ \ are\ in\ the\ same\ side\ of\ the\ bipartition\ if\ and\ only\ if\ they\ have\ the\r\n\ \ \ \ \ \ \ \ \ same\ color\r\n\ @throws\ IllegalArgumentException\ unless\ {@code\ 0\ <\=\ v\ <\ V}\ \r\n\ @throws\ UnsupportedOperationException\ if\ this\ method\ is\ called\ when\ the\ graph\r\n\ \ \ \ \ \ \ \ \ is\ not\ bipartite\r\n
comment5.params=
comment5.target=java.lang.Iterable\ oddCycle()
comment5.text=\r\n\ Returns\ an\ odd-length\ cycle\ if\ the\ graph\ is\ not\ bipartite,\ and\r\n\ {@code\ null}\ otherwise.\r\n\r\n\ @return\ an\ odd-length\ cycle\ if\ the\ graph\ is\ not\ bipartite\r\n\ \ \ \ \ \ \ \ \ (and\ hence\ has\ an\ odd-length\ cycle),\ and\ {@code\ null}\r\n\ \ \ \ \ \ \ \ \ otherwise\r\n
comment6.params=G
comment6.target=boolean\ check(Graph)
comment7.params=v
comment7.target=void\ validateVertex(int)
comment8.params=args
comment8.target=void\ main(java.lang.String[])
comment8.text=\r\n\ Unit\ tests\ the\ {@code\ BipartiteX}\ data\ type.\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
numComments=9
